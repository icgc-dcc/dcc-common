/*
 * Copyright (c) 2015 The Ontario Institute for Cancer Research. All rights reserved.                             
 *                                                                                                               
 * This program and the accompanying materials are made available under the terms of the GNU Public License v3.0.
 * You should have received a copy of the GNU General Public License along with                                  
 * this program. If not, see <http://www.gnu.org/licenses/>.                                                     
 *                                                                                                               
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY                           
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES                          
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT                           
 * SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,                                
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED                          
 * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;                               
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER                              
 * IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN                         
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/**
 * Dictionary file type.
 */
codeList(source, codeList) ::= <<
<copyright(source.year)>
package <source.packageName>;

import <source.imports>;
import static lombok.AccessLevel.PRIVATE;
import lombok.Getter;
import lombok.NonNull;
import lombok.RequiredArgsConstructor;
import lombok.val;

/**
 * Code list {@code <codeList.name>}.
 */
@Getter
@RequiredArgsConstructor(access = PRIVATE)
public enum <className(codeList)> {
	
  <codeList.terms:{ t | <term(t)>}; separator=",\n\n">;
  
  private final int code;
  @NonNull
  private final String value;
  private final String uri;
  
}
>>

/**
 * Dictionary file type.
 */
fileType(source, schema) ::= <<
<copyright(source.year)>
package <source.packageName>;

import <source.imports>;
import lombok.Value;
import lombok.experimental.Builders;
import com.fasterxml.jackson.annotation.JsonCreator;

/**
 * Dictionary {@code <schema.name>} schema (file type).
 * \<p>
 * Dictionary definition:
 * \<code>
 * <schema; format="javadoc">
 * \</code>
 */
@Value
@Builder
public class <className(schema)> {
	
  <schema.fields:field(); separator="\n\n">
  
  @JsonCreator
  private <className(schema)>(<schema.fields:param(); anchor, wrap, separator=", ">) {
    <schema.fields:{ f | this.fieldName(f) = fieldName(f);}; separator="\n">
  }
  
}
>>

/**
 * Field template
 */
param(field) ::= <<
@JsonProperty("<fieldName(field)>") <field.valueType; format="valueType"> <fieldName(field)>
>>

/**
 * Field template
 */
field(field) ::= <<
/** Schema field {@code <field.name>} */
private <field.valueType; format="valueType"> <field.name; format="fieldName">;
>>

/**
 * Term template
 */
term(term) ::= <<
/** Code list term {@code <term.value>} */
<term.value; format="enumValue">(<term.code>, "<term.value>", <if(!term.uri)>null<else>"<term.uri>"<endif>)
>>

/**
 * Class name token
 */
className(schema) ::= <%
<schema.name; format="className">
%>

/**
 * Instance name token
 */
instanceName(schema) ::= <%
<schema.name; format="instanceName">
%>

/**
 * Field name token
 */
fieldName(field) ::= <%
<field.name; format="fieldName">
%>

/**
 * Copyright header.
 */
copyright(year) ::= <<
/*
 * Copyright (c) <year> The Ontario Institute for Cancer Research. All rights reserved.                             
 *                                                                                                               
 * This program and the accompanying materials are made available under the terms of the GNU Public License v3.0.
 * You should have received a copy of the GNU General Public License along with                                  
 * this program. If not, see \<http://www.gnu.org/licenses/>.                                                     
 *                                                                                                               
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY                           
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES                          
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT                           
 * SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,                                
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED                          
 * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;                               
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER                              
 * IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN                         
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
>>